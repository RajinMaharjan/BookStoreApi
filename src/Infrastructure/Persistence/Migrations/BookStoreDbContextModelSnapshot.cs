// <auto-generated />
using System;
using Bookstore.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(BookStoreDbContext))]
    partial class BookStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bookstore.Domain.Entities.Book", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasDefaultValue("49fa1188-fbf8-4b6d-ab08-b99c56dbdbaf")
                        .HasColumnName("id");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("author");

                    b.Property<bool>("Available")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("available");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("category");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("descriptiion");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_path");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_url");

                    b.Property<decimal>("Price")
                        .HasMaxLength(20)
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("title");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("YearPublished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 5, 13, 31, 4, 106, DateTimeKind.Local).AddTicks(8665))
                        .HasColumnName("year_published");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = "af075a30-65f8-424e-bd31-d3edb3ef125c",
                            Author = "A",
                            Available = false,
                            Category = "A",
                            Description = "A",
                            ImageUrl = "A",
                            Price = 1099.99m,
                            Title = "A",
                            UserId = "d88192b5-a229-485b-aa0e-58e27ecd1307",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "f4d5efc7-1332-44ce-ab26-19ba8e0c0126",
                            Author = "B",
                            Available = false,
                            Category = "B",
                            Description = "B",
                            ImageUrl = "B",
                            Price = 1199.99m,
                            Title = "B",
                            UserId = "d88192b5-a229-485b-aa0e-58e27ecd1307",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "abb12092-df60-43b2-9ae5-eacabdacc6f0",
                            Author = "C",
                            Available = false,
                            Category = "C",
                            Description = "C",
                            ImageUrl = "C",
                            Price = 1299.99m,
                            Title = "C",
                            UserId = "d88192b5-a229-485b-aa0e-58e27ecd1307",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "c93ddc06-38f1-47ed-bb87-cb79097dda5c",
                            Author = "D",
                            Available = false,
                            Category = "D",
                            Description = "D",
                            ImageUrl = "D",
                            Price = 1399.99m,
                            Title = "D",
                            UserId = "d88192b5-a229-485b-aa0e-58e27ecd1307",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "c9e6e583-4511-401d-9c5e-eaae78e41f9a",
                            Author = "E",
                            Available = false,
                            Category = "E",
                            Description = "E",
                            ImageUrl = "E",
                            Price = 1499.99m,
                            Title = "E",
                            UserId = "d88192b5-a229-485b-aa0e-58e27ecd1307",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "72bf017c-59ec-45bc-9e2f-c9ebb7684b74",
                            Author = "F",
                            Available = false,
                            Category = "F",
                            Description = "F",
                            ImageUrl = "F",
                            Price = 1599.99m,
                            Title = "F",
                            UserId = "d88192b5-a229-485b-aa0e-58e27ecd1307",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "322e856d-c863-428e-ae14-38f7cf176268",
                            Author = "G",
                            Available = false,
                            Category = "G",
                            Description = "G",
                            ImageUrl = "G",
                            Price = 1699.99m,
                            Title = "G",
                            UserId = "d88192b5-a229-485b-aa0e-58e27ecd1307",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "f6d3dfc3-4f53-4fae-9da9-57cc29cd7e3a",
                            Author = "H",
                            Available = false,
                            Category = "H",
                            Description = "H",
                            ImageUrl = "H",
                            Price = 1699.99m,
                            Title = "H",
                            UserId = "d88192b5-a229-485b-aa0e-58e27ecd1307",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "e81d6bb8-b7d1-41b3-89c5-68891f109ec0",
                            Author = "I",
                            Available = false,
                            Category = "I",
                            Description = "I",
                            ImageUrl = "I",
                            Price = 1799.99m,
                            Title = "I",
                            UserId = "d88192b5-a229-485b-aa0e-58e27ecd1307",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "f4ce1f0d-a21a-4a23-9304-ea75110384c7",
                            Author = "J",
                            Available = false,
                            Category = "J",
                            Description = "J",
                            ImageUrl = "J",
                            Price = 1899.99m,
                            Title = "J",
                            UserId = "d88192b5-a229-485b-aa0e-58e27ecd1307",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "88bd37d6-8321-48d2-ac0e-2b312516a3a2",
                            Author = "K",
                            Available = false,
                            Category = "K",
                            Description = "K",
                            ImageUrl = "K",
                            Price = 1999.99m,
                            Title = "A",
                            UserId = "d88192b5-a229-485b-aa0e-58e27ecd1307",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "509ff7b5-1c9c-4f30-9aa5-c509fd79c70f",
                            Author = "L",
                            Available = false,
                            Category = "L",
                            Description = "L",
                            ImageUrl = "L",
                            Price = 2099.99m,
                            Title = "L",
                            UserId = "d88192b5-a229-485b-aa0e-58e27ecd1307",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasDefaultValue("3beb9185-70c6-412d-8172-24719aa83a82")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_path");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_url");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnName("phone_number")
                        .IsFixedLength();

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(1)
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "d88192b5-a229-485b-aa0e-58e27ecd1307",
                            Email = "rajin@gmail.com",
                            FirstName = "Rajin",
                            IsDeleted = false,
                            LastName = "Maharjan",
                            PasswordHash = "$2a$11$fVbekEKZ4lRv9n7VKkK.U.5qTLxdtiQe2sO8G5MQ/J1nxslK8jxw.",
                            PhoneNumber = "1234567800",
                            Role = 0
                        },
                        new
                        {
                            Id = "99c41963-ba97-4cdb-a9f6-81e43e6954d7",
                            Email = "gagan@gmail.com",
                            FirstName = "Gagan",
                            IsDeleted = false,
                            LastName = "Maharjan",
                            PasswordHash = "$2a$11$3v2Z49Pc6qiAquxaTTFSru6Bv1ki3/Gte7MNbgC0s0voHiX4xDWR6",
                            PhoneNumber = "1134567890",
                            Role = 1
                        },
                        new
                        {
                            Id = "b0916300-f9b2-40f0-aeac-2a56707afa2e",
                            Email = "milan@gmail.com",
                            FirstName = "Milan",
                            IsDeleted = false,
                            LastName = "Maharjan",
                            PasswordHash = "$2a$11$t2UUNbnEnoIF.HG.KS95euB1KMc32jP0u5MNK2JQVgNMIgHbiBxNy",
                            PhoneNumber = "1234567890",
                            Role = 1
                        });
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.Book", b =>
                {
                    b.HasOne("Bookstore.Domain.Entities.User", "User")
                        .WithMany("Books")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.User", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
