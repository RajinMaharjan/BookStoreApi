// <auto-generated />
using System;
using Bookstore.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(BookStoreDbContext))]
    [Migration("20231006031315_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Bookstore.Domain.Entities.Book", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasDefaultValue("1caa618d-cc22-4703-b560-b4ff969d132a")
                        .HasColumnName("id");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("author");

                    b.Property<bool>("Available")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true)
                        .HasColumnName("available");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("category");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("descriptiion");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_path");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_url");

                    b.Property<decimal>("Price")
                        .HasMaxLength(20)
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("title");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("user_id");

                    b.Property<DateTime?>("YearPublished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2023, 10, 6, 8, 58, 15, 144, DateTimeKind.Local).AddTicks(2024))
                        .HasColumnName("year_published");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = "dce568c1-c379-4c86-a004-fa3b3de8fb1f",
                            Author = "A",
                            Available = false,
                            Category = "A",
                            Description = "A",
                            ImageUrl = "A",
                            Price = 1099.99m,
                            Title = "A",
                            UserId = "87ac6167-355b-4ac8-ba4e-6f0e9a7e5f5f"
                        },
                        new
                        {
                            Id = "34f5bfb9-d8c6-4ed1-a64d-17eaf37ea5df",
                            Author = "B",
                            Available = false,
                            Category = "B",
                            Description = "B",
                            ImageUrl = "B",
                            Price = 1199.99m,
                            Title = "B",
                            UserId = "87ac6167-355b-4ac8-ba4e-6f0e9a7e5f5f"
                        },
                        new
                        {
                            Id = "7af21cea-7ce5-4f39-96d2-51f76e7478ee",
                            Author = "C",
                            Available = false,
                            Category = "C",
                            Description = "C",
                            ImageUrl = "C",
                            Price = 1299.99m,
                            Title = "C",
                            UserId = "87ac6167-355b-4ac8-ba4e-6f0e9a7e5f5f"
                        },
                        new
                        {
                            Id = "b821d092-350b-4ec9-adb7-168c86856e29",
                            Author = "D",
                            Available = false,
                            Category = "D",
                            Description = "D",
                            ImageUrl = "D",
                            Price = 1399.99m,
                            Title = "D",
                            UserId = "87ac6167-355b-4ac8-ba4e-6f0e9a7e5f5f"
                        },
                        new
                        {
                            Id = "ae6527d3-6f37-4152-848b-0c0fbb49f11e",
                            Author = "E",
                            Available = false,
                            Category = "E",
                            Description = "E",
                            ImageUrl = "E",
                            Price = 1499.99m,
                            Title = "E",
                            UserId = "87ac6167-355b-4ac8-ba4e-6f0e9a7e5f5f"
                        },
                        new
                        {
                            Id = "a4203c62-1dc8-451a-96b7-9f937cec1a25",
                            Author = "F",
                            Available = false,
                            Category = "F",
                            Description = "F",
                            ImageUrl = "F",
                            Price = 1599.99m,
                            Title = "F",
                            UserId = "87ac6167-355b-4ac8-ba4e-6f0e9a7e5f5f"
                        },
                        new
                        {
                            Id = "898c6781-6c37-4e11-817c-28ea838ee323",
                            Author = "G",
                            Available = false,
                            Category = "G",
                            Description = "G",
                            ImageUrl = "G",
                            Price = 1699.99m,
                            Title = "G",
                            UserId = "87ac6167-355b-4ac8-ba4e-6f0e9a7e5f5f"
                        },
                        new
                        {
                            Id = "d5293663-8d03-41f8-a244-5a08a67bfc6f",
                            Author = "H",
                            Available = false,
                            Category = "H",
                            Description = "H",
                            ImageUrl = "H",
                            Price = 1699.99m,
                            Title = "H",
                            UserId = "87ac6167-355b-4ac8-ba4e-6f0e9a7e5f5f"
                        },
                        new
                        {
                            Id = "2803e963-2bf7-44d4-a9a0-e5635781ed08",
                            Author = "I",
                            Available = false,
                            Category = "I",
                            Description = "I",
                            ImageUrl = "I",
                            Price = 1799.99m,
                            Title = "I",
                            UserId = "87ac6167-355b-4ac8-ba4e-6f0e9a7e5f5f"
                        },
                        new
                        {
                            Id = "7921cb2d-a323-46f8-a926-23d98887e652",
                            Author = "J",
                            Available = false,
                            Category = "J",
                            Description = "J",
                            ImageUrl = "J",
                            Price = 1899.99m,
                            Title = "J",
                            UserId = "87ac6167-355b-4ac8-ba4e-6f0e9a7e5f5f"
                        },
                        new
                        {
                            Id = "c1971480-5af6-4519-b921-6114abce9d83",
                            Author = "K",
                            Available = false,
                            Category = "K",
                            Description = "K",
                            ImageUrl = "K",
                            Price = 1999.99m,
                            Title = "A",
                            UserId = "87ac6167-355b-4ac8-ba4e-6f0e9a7e5f5f"
                        },
                        new
                        {
                            Id = "f77d35fc-4cf5-4eda-bc83-2868afe966e4",
                            Author = "L",
                            Available = false,
                            Category = "L",
                            Description = "L",
                            ImageUrl = "L",
                            Price = 2099.99m,
                            Title = "L",
                            UserId = "87ac6167-355b-4ac8-ba4e-6f0e9a7e5f5f"
                        });
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasDefaultValue("fa618f5f-591a-48a3-881d-54735eb8da2f")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_path");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_url");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnName("phone_number")
                        .IsFixedLength();

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(1)
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "87ac6167-355b-4ac8-ba4e-6f0e9a7e5f5f",
                            Email = "rajin@gmail.com",
                            FirstName = "Rajin",
                            IsDeleted = false,
                            LastName = "Maharjan",
                            PasswordHash = "$2a$11$h/WiWa6.ZC4doFiBft0eb.WSTTGEjUSdKUOj55zvSJ8dlohqDIbZe",
                            PhoneNumber = "1234567800",
                            Role = 0
                        },
                        new
                        {
                            Id = "f13db9e8-1bb3-4db1-81a6-ec7d82af270d",
                            Email = "gagan@gmail.com",
                            FirstName = "Gagan",
                            IsDeleted = false,
                            LastName = "Maharjan",
                            PasswordHash = "$2a$11$TvYGU/OlaTvib9AvmgXAXeD.KM95SiZ0hieNXtjyaFmF1trTtlhvq",
                            PhoneNumber = "1134567890",
                            Role = 1
                        },
                        new
                        {
                            Id = "5c487efd-b1e8-4788-a40b-9905302826c5",
                            Email = "milan@gmail.com",
                            FirstName = "Milan",
                            IsDeleted = false,
                            LastName = "Maharjan",
                            PasswordHash = "$2a$11$Kdsuyx06lTRANKzFLoN3deiYGNrEPFGPnmeTRl.PU0exFEVN.c6PS",
                            PhoneNumber = "1234567890",
                            Role = 1
                        });
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.Book", b =>
                {
                    b.HasOne("Bookstore.Domain.Entities.User", "User")
                        .WithMany("Books")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.User", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
