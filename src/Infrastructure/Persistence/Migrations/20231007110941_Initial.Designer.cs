// <auto-generated />
using System;
using Bookstore.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(BookStoreDbContext))]
    [Migration("20231007110941_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bookstore.Domain.Entities.Book", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasDefaultValue("9cfd253a-ebe8-4ccc-95e8-b4f012f43ff1")
                        .HasColumnName("id");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("author");

                    b.Property<bool>("Available")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("available");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("category");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("descriptiion");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_path");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_url");

                    b.Property<decimal>("Price")
                        .HasMaxLength(20)
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("title");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("user_id");

                    b.Property<DateTime?>("YearPublished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 7, 16, 54, 40, 593, DateTimeKind.Local).AddTicks(6113))
                        .HasColumnName("year_published");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = "e26b7b16-977c-4424-91ae-6af9b44441f7",
                            Author = "A",
                            Available = false,
                            Category = "A",
                            Description = "A",
                            ImageUrl = "A",
                            Price = 1099.99m,
                            Title = "A",
                            UserId = "2a97ed85-d217-4aba-9b5e-6d1e6cc2239b"
                        },
                        new
                        {
                            Id = "002ab839-9690-4b6f-9d4c-12592635078c",
                            Author = "B",
                            Available = false,
                            Category = "B",
                            Description = "B",
                            ImageUrl = "B",
                            Price = 1199.99m,
                            Title = "B",
                            UserId = "2a97ed85-d217-4aba-9b5e-6d1e6cc2239b"
                        },
                        new
                        {
                            Id = "b89ab5c2-3ad5-48b4-a2b6-b38c284e790b",
                            Author = "C",
                            Available = false,
                            Category = "C",
                            Description = "C",
                            ImageUrl = "C",
                            Price = 1299.99m,
                            Title = "C",
                            UserId = "2a97ed85-d217-4aba-9b5e-6d1e6cc2239b"
                        },
                        new
                        {
                            Id = "d87ca85f-fa40-455e-b7a1-1f6156a029f4",
                            Author = "D",
                            Available = false,
                            Category = "D",
                            Description = "D",
                            ImageUrl = "D",
                            Price = 1399.99m,
                            Title = "D",
                            UserId = "2a97ed85-d217-4aba-9b5e-6d1e6cc2239b"
                        },
                        new
                        {
                            Id = "cfc4ffd5-a816-4ed1-818b-81a165eb82e9",
                            Author = "E",
                            Available = false,
                            Category = "E",
                            Description = "E",
                            ImageUrl = "E",
                            Price = 1499.99m,
                            Title = "E",
                            UserId = "2a97ed85-d217-4aba-9b5e-6d1e6cc2239b"
                        },
                        new
                        {
                            Id = "4d68b11f-1295-458a-b391-65e5a23cd6ee",
                            Author = "F",
                            Available = false,
                            Category = "F",
                            Description = "F",
                            ImageUrl = "F",
                            Price = 1599.99m,
                            Title = "F",
                            UserId = "2a97ed85-d217-4aba-9b5e-6d1e6cc2239b"
                        },
                        new
                        {
                            Id = "8eae9518-7d32-4d32-ad98-0043c7893d05",
                            Author = "G",
                            Available = false,
                            Category = "G",
                            Description = "G",
                            ImageUrl = "G",
                            Price = 1699.99m,
                            Title = "G",
                            UserId = "2a97ed85-d217-4aba-9b5e-6d1e6cc2239b"
                        },
                        new
                        {
                            Id = "10447bc1-efab-4471-8d19-b81f9bb431cd",
                            Author = "H",
                            Available = false,
                            Category = "H",
                            Description = "H",
                            ImageUrl = "H",
                            Price = 1699.99m,
                            Title = "H",
                            UserId = "2a97ed85-d217-4aba-9b5e-6d1e6cc2239b"
                        },
                        new
                        {
                            Id = "c1282db4-fa3d-4631-87bc-e98586cfe7b2",
                            Author = "I",
                            Available = false,
                            Category = "I",
                            Description = "I",
                            ImageUrl = "I",
                            Price = 1799.99m,
                            Title = "I",
                            UserId = "2a97ed85-d217-4aba-9b5e-6d1e6cc2239b"
                        },
                        new
                        {
                            Id = "81e30fad-21a7-4b98-b56e-1a0a45debb7f",
                            Author = "J",
                            Available = false,
                            Category = "J",
                            Description = "J",
                            ImageUrl = "J",
                            Price = 1899.99m,
                            Title = "J",
                            UserId = "2a97ed85-d217-4aba-9b5e-6d1e6cc2239b"
                        },
                        new
                        {
                            Id = "1a43810a-8d87-428c-8435-e730c34f4156",
                            Author = "K",
                            Available = false,
                            Category = "K",
                            Description = "K",
                            ImageUrl = "K",
                            Price = 1999.99m,
                            Title = "A",
                            UserId = "2a97ed85-d217-4aba-9b5e-6d1e6cc2239b"
                        },
                        new
                        {
                            Id = "a03ab336-e9f5-4f1c-8130-2e0597e96883",
                            Author = "L",
                            Available = false,
                            Category = "L",
                            Description = "L",
                            ImageUrl = "L",
                            Price = 2099.99m,
                            Title = "L",
                            UserId = "2a97ed85-d217-4aba-9b5e-6d1e6cc2239b"
                        });
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasDefaultValue("618818ee-0628-47fe-901f-935d6216dcf8")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_path");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_url");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnName("phone_number")
                        .IsFixedLength();

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(1)
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "2a97ed85-d217-4aba-9b5e-6d1e6cc2239b",
                            Email = "rajin@gmail.com",
                            FirstName = "Rajin",
                            IsDeleted = false,
                            LastName = "Maharjan",
                            PasswordHash = "$2a$11$CldF2Gc/DmMzS5UIhNMIYu47mwxzh7cxn.vqcncDmSaTLdCnJ6E06",
                            PhoneNumber = "1234567800",
                            Role = 0
                        },
                        new
                        {
                            Id = "55abb6ef-e9b9-4b70-bb75-0cdbbc8605c3",
                            Email = "gagan@gmail.com",
                            FirstName = "Gagan",
                            IsDeleted = false,
                            LastName = "Maharjan",
                            PasswordHash = "$2a$11$oCt68LcWfW2EOQK/cbTT3.NZqQJWniuYUU9zfs9JyAR2U8y1Mok92",
                            PhoneNumber = "1134567890",
                            Role = 1
                        },
                        new
                        {
                            Id = "88c58619-59b5-4709-8612-9e23b1da8281",
                            Email = "milan@gmail.com",
                            FirstName = "Milan",
                            IsDeleted = false,
                            LastName = "Maharjan",
                            PasswordHash = "$2a$11$fytESG5Ng9kqwYF5iXEcJu/9LD8OmxON4EaBvojVrVmDUl10E59JS",
                            PhoneNumber = "1234567890",
                            Role = 1
                        });
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.Book", b =>
                {
                    b.HasOne("Bookstore.Domain.Entities.User", "User")
                        .WithMany("Books")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.User", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
