// <auto-generated />
using System;
using Bookstore.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(BookStoreDbContext))]
    [Migration("20231005071220_ForeignKeyFalse")]
    partial class ForeignKeyFalse
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bookstore.Domain.Entities.Book", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasDefaultValue("479b4528-3b77-4b75-96e1-bea4d41dd7a5")
                        .HasColumnName("id");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("author");

                    b.Property<bool>("Available")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("available");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("category");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("descriptiion");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_path");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_url");

                    b.Property<decimal>("Price")
                        .HasMaxLength(20)
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("title");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("YearPublished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 5, 12, 57, 19, 922, DateTimeKind.Local).AddTicks(8092))
                        .HasColumnName("year_published");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = "fdb905a7-2330-4e78-ad67-be4299dd6ab0",
                            Author = "A",
                            Available = false,
                            Category = "A",
                            Description = "A",
                            ImageUrl = "A",
                            Price = 1099.99m,
                            Title = "A",
                            UserId = "d5171da9-8577-48ba-bca8-f3c65f238899",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "ce87b71a-bc47-4620-be4f-055298c10a23",
                            Author = "B",
                            Available = false,
                            Category = "B",
                            Description = "B",
                            ImageUrl = "B",
                            Price = 1199.99m,
                            Title = "B",
                            UserId = "d5171da9-8577-48ba-bca8-f3c65f238899",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "25506d4f-601f-4cc9-b5eb-3940c4197d30",
                            Author = "C",
                            Available = false,
                            Category = "C",
                            Description = "C",
                            ImageUrl = "C",
                            Price = 1299.99m,
                            Title = "C",
                            UserId = "d5171da9-8577-48ba-bca8-f3c65f238899",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "16016198-1e13-4d5f-9f59-991e05f6432b",
                            Author = "D",
                            Available = false,
                            Category = "D",
                            Description = "D",
                            ImageUrl = "D",
                            Price = 1399.99m,
                            Title = "D",
                            UserId = "d5171da9-8577-48ba-bca8-f3c65f238899",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "4990a3f0-9875-4449-8f72-6d7e2cd3da3e",
                            Author = "E",
                            Available = false,
                            Category = "E",
                            Description = "E",
                            ImageUrl = "E",
                            Price = 1499.99m,
                            Title = "E",
                            UserId = "d5171da9-8577-48ba-bca8-f3c65f238899",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "2dcefad1-11f7-4ee6-bba5-38ed0cd7abb1",
                            Author = "F",
                            Available = false,
                            Category = "F",
                            Description = "F",
                            ImageUrl = "F",
                            Price = 1599.99m,
                            Title = "F",
                            UserId = "d5171da9-8577-48ba-bca8-f3c65f238899",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "ca7daa86-a303-4cb7-829b-f2b527d30cf3",
                            Author = "G",
                            Available = false,
                            Category = "G",
                            Description = "G",
                            ImageUrl = "G",
                            Price = 1699.99m,
                            Title = "G",
                            UserId = "d5171da9-8577-48ba-bca8-f3c65f238899",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "c37f6594-246f-45ca-a3ac-b01ac032456a",
                            Author = "H",
                            Available = false,
                            Category = "H",
                            Description = "H",
                            ImageUrl = "H",
                            Price = 1699.99m,
                            Title = "H",
                            UserId = "d5171da9-8577-48ba-bca8-f3c65f238899",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "0a649d3d-d754-45ba-ab3c-145516ae3935",
                            Author = "I",
                            Available = false,
                            Category = "I",
                            Description = "I",
                            ImageUrl = "I",
                            Price = 1799.99m,
                            Title = "I",
                            UserId = "d5171da9-8577-48ba-bca8-f3c65f238899",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "23a38047-59be-4fed-b6db-d21ae279382f",
                            Author = "J",
                            Available = false,
                            Category = "J",
                            Description = "J",
                            ImageUrl = "J",
                            Price = 1899.99m,
                            Title = "J",
                            UserId = "d5171da9-8577-48ba-bca8-f3c65f238899",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "6c022e44-6876-409f-bf76-e1eed092701e",
                            Author = "K",
                            Available = false,
                            Category = "K",
                            Description = "K",
                            ImageUrl = "K",
                            Price = 1999.99m,
                            Title = "A",
                            UserId = "d5171da9-8577-48ba-bca8-f3c65f238899",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "9705d3ef-fae6-4270-9de1-f43b0f395da1",
                            Author = "L",
                            Available = false,
                            Category = "L",
                            Description = "L",
                            ImageUrl = "L",
                            Price = 2099.99m,
                            Title = "L",
                            UserId = "d5171da9-8577-48ba-bca8-f3c65f238899",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasDefaultValue("355fb25e-595a-44fc-8a2e-4c028767be97")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_path");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_url");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnName("phone_number")
                        .IsFixedLength();

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(1)
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "d5171da9-8577-48ba-bca8-f3c65f238899",
                            Email = "rajin@gmail.com",
                            FirstName = "Rajin",
                            IsDeleted = false,
                            LastName = "Maharjan",
                            PasswordHash = "$2a$11$aZ7zNWrQi3Iu18c0/sa7Du4VfxL1zcNCESiOC5aqSW.Iis/9tFnKe",
                            PhoneNumber = "1234567800",
                            Role = 0
                        },
                        new
                        {
                            Id = "9cbbeb26-4da9-4cbd-acf4-3f08adf3f481",
                            Email = "gagan@gmail.com",
                            FirstName = "Gagan",
                            IsDeleted = false,
                            LastName = "Maharjan",
                            PasswordHash = "$2a$11$27WBo/Tbb8.8qcNcmZYAH./TnuhzlgF0lkNy8KEZdEdXAKzb89PpG",
                            PhoneNumber = "1134567890",
                            Role = 1
                        },
                        new
                        {
                            Id = "2ef5743e-9051-40cf-82e0-2ede041e707b",
                            Email = "milan@gmail.com",
                            FirstName = "Milan",
                            IsDeleted = false,
                            LastName = "Maharjan",
                            PasswordHash = "$2a$11$XumbAZ4b0lDVxRsOrvvxB.7LjYOL/2sqFsKKeK1tghnENcviLH9nq",
                            PhoneNumber = "1234567890",
                            Role = 1
                        });
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.Book", b =>
                {
                    b.HasOne("Bookstore.Domain.Entities.User", "User")
                        .WithMany("Books")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.User", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
