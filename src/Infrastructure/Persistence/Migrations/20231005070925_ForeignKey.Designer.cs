// <auto-generated />
using System;
using Bookstore.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(BookStoreDbContext))]
    [Migration("20231005070925_ForeignKey")]
    partial class ForeignKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bookstore.Domain.Entities.Book", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasDefaultValue("d2a2737f-9e14-4453-b93e-c3cd320db725")
                        .HasColumnName("id");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("author");

                    b.Property<bool>("Available")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("available");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("category");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("descriptiion");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_path");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_url");

                    b.Property<decimal>("Price")
                        .HasMaxLength(20)
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("title");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("YearPublished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 5, 12, 54, 24, 856, DateTimeKind.Local).AddTicks(8590))
                        .HasColumnName("year_published");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = "0359efac-13a2-44c4-b0ce-d10710e5c67a",
                            Author = "A",
                            Available = false,
                            Category = "A",
                            Description = "A",
                            ImageUrl = "A",
                            Price = 1099.99m,
                            Title = "A",
                            UserId = "b3e5e152-374e-414f-9f75-96f05054e2bf",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "88d710ba-9f00-451f-80a5-e84ecb19f92d",
                            Author = "B",
                            Available = false,
                            Category = "B",
                            Description = "B",
                            ImageUrl = "B",
                            Price = 1199.99m,
                            Title = "B",
                            UserId = "b3e5e152-374e-414f-9f75-96f05054e2bf",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "57268c9d-882b-4fc8-b954-b92cc614d51f",
                            Author = "C",
                            Available = false,
                            Category = "C",
                            Description = "C",
                            ImageUrl = "C",
                            Price = 1299.99m,
                            Title = "C",
                            UserId = "b3e5e152-374e-414f-9f75-96f05054e2bf",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "8683599c-b776-42b4-a04a-7f25a493e9a1",
                            Author = "D",
                            Available = false,
                            Category = "D",
                            Description = "D",
                            ImageUrl = "D",
                            Price = 1399.99m,
                            Title = "D",
                            UserId = "b3e5e152-374e-414f-9f75-96f05054e2bf",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "ebc17f3b-8773-458e-bf3b-119ee1bded80",
                            Author = "E",
                            Available = false,
                            Category = "E",
                            Description = "E",
                            ImageUrl = "E",
                            Price = 1499.99m,
                            Title = "E",
                            UserId = "b3e5e152-374e-414f-9f75-96f05054e2bf",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "68a8504a-ecf1-47a6-af43-2c9c54410f25",
                            Author = "F",
                            Available = false,
                            Category = "F",
                            Description = "F",
                            ImageUrl = "F",
                            Price = 1599.99m,
                            Title = "F",
                            UserId = "b3e5e152-374e-414f-9f75-96f05054e2bf",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "ee4d8f97-8416-49ae-8e46-4db8271dc78d",
                            Author = "G",
                            Available = false,
                            Category = "G",
                            Description = "G",
                            ImageUrl = "G",
                            Price = 1699.99m,
                            Title = "G",
                            UserId = "b3e5e152-374e-414f-9f75-96f05054e2bf",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "7c05607f-b2d6-4fef-b5da-f76178a84b7c",
                            Author = "H",
                            Available = false,
                            Category = "H",
                            Description = "H",
                            ImageUrl = "H",
                            Price = 1699.99m,
                            Title = "H",
                            UserId = "b3e5e152-374e-414f-9f75-96f05054e2bf",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "737b2b47-9229-4a60-bc81-b69dc7ff1c31",
                            Author = "I",
                            Available = false,
                            Category = "I",
                            Description = "I",
                            ImageUrl = "I",
                            Price = 1799.99m,
                            Title = "I",
                            UserId = "b3e5e152-374e-414f-9f75-96f05054e2bf",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "b1add67b-516b-4ea4-8f23-ea1de0b005ff",
                            Author = "J",
                            Available = false,
                            Category = "J",
                            Description = "J",
                            ImageUrl = "J",
                            Price = 1899.99m,
                            Title = "J",
                            UserId = "b3e5e152-374e-414f-9f75-96f05054e2bf",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "0c29bee6-7e1d-44a9-940a-726de338755a",
                            Author = "K",
                            Available = false,
                            Category = "K",
                            Description = "K",
                            ImageUrl = "K",
                            Price = 1999.99m,
                            Title = "A",
                            UserId = "b3e5e152-374e-414f-9f75-96f05054e2bf",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "f462be9e-ef3d-46b8-93bf-235c467248cc",
                            Author = "L",
                            Available = false,
                            Category = "L",
                            Description = "L",
                            ImageUrl = "L",
                            Price = 2099.99m,
                            Title = "L",
                            UserId = "b3e5e152-374e-414f-9f75-96f05054e2bf",
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasDefaultValue("fddb809e-accc-4217-9a18-6c03b96d98f9")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_path");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("image_url");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnName("phone_number")
                        .IsFixedLength();

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(1)
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "b3e5e152-374e-414f-9f75-96f05054e2bf",
                            Email = "rajin@gmail.com",
                            FirstName = "Rajin",
                            IsDeleted = false,
                            LastName = "Maharjan",
                            PasswordHash = "$2a$11$OWUqpx1y/p85PCTN4sFxvu.g8pSe99hiZdQDAI/./UcLidYyi1lM2",
                            PhoneNumber = "1234567800",
                            Role = 0
                        },
                        new
                        {
                            Id = "36377e96-958b-48d8-89ba-478a0601ccf8",
                            Email = "gagan@gmail.com",
                            FirstName = "Gagan",
                            IsDeleted = false,
                            LastName = "Maharjan",
                            PasswordHash = "$2a$11$uqV/qDAIaLNBOxb2St/qNejFqbnQpM.SaZ1GBeP.KIVkjqM.wBLBe",
                            PhoneNumber = "1134567890",
                            Role = 1
                        },
                        new
                        {
                            Id = "39a62334-17fb-4448-8559-84091f9a6a62",
                            Email = "milan@gmail.com",
                            FirstName = "Milan",
                            IsDeleted = false,
                            LastName = "Maharjan",
                            PasswordHash = "$2a$11$kiQP5CvGGqdj4MOcbYz1r.EL1HK316YzVl7wBE3lVURzu4nKWBasa",
                            PhoneNumber = "1234567890",
                            Role = 1
                        });
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.Book", b =>
                {
                    b.HasOne("Bookstore.Domain.Entities.User", "User")
                        .WithMany("Books")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.User", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
